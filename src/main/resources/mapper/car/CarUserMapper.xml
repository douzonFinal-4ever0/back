<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kosa.resq.mapper.car.CarUserMapper">

    <resultMap id="carRezMap" type="com.kosa.resq.domain.vo.car.CarRezResponseVO">
        <id property="car_rez_code" column="car_rez_code"/>
        <result property="car_rez_code" column="car_rez_code"/>
        <result property="rez_at" column="rez_at"/>
        <result property="detail" column="detail"/>
        <result property="est_mileage" column="est_mileage"/>
        <result property="rez_status" column="rez_status"/>
        <result property="start_at" column="start_at"/>
        <result property="return_at" column="return_at"/>
        <result property="updated_at" column="updated_at"/>
        <collection property="memResponseVO" resultMap="memMap"/>
        <collection property="carDetailResponseVO" resultMap="carDetailMap"/>
    </resultMap>
    <resultMap id="memMap" type="com.kosa.resq.domain.vo.common.MemResponseVO">
        <id property="mem_code" column="mem_code"/>
        <result property="mem_code" column="mem_code"/>
        <result property="position_name" column="position_name"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="role" column="role"/>
        <result property="hired_at" column="hired_at"/>
        <result property="created_at" column="created_at"/>
        <result property="address" column="address"/>
        <result property="tel" column="tel"/>
        <result property="is_worked" column="is_worked"/>
        <result property="profile_img_url" column="profile_img_url"/>
        <collection property="deptVO" resultMap="deptMap"/>
    </resultMap>
    <resultMap id="deptMap" type="com.kosa.resq.domain.vo.common.DeptVO">
        <id property="dept_code" column="dept_code"/>
        <result property="dept_code" column="dept_code"/>
        <result property="dept_name" column="dept_name"/>
        <result property="dept_tel" column="dept_tel"/>
        <result property="dept_head_code" column="dept_head_code"/>
        <result property="location" column="location"/>
    </resultMap>
    <resultMap id="carDetailMap" type="com.kosa.resq.domain.vo.car.CarDetailResponseVO">
        <result property="fuel_effciency" column="fuel_effciency"/>
        <result property="accum_mileage" column="accum_mileage"/>
        <result property="car_status" column="car_status"/>
        <result property="updated_at" column="updated_at"/>
        <result property="car_latitude" column="car_latitude"/>
        <result property="car_longitude" column="car_longitude"/>
        <result property="car_address" column="car_address"/>
        <collection property="carVO" resultMap="carMap"/>
    </resultMap>
    <resultMap id="carMap" type="com.kosa.resq.domain.vo.car.CarVO">
        <id property="car_code" column="car_code"/>
        <result property="car_code" column="car_code"/>
        <result property="car_name" column="car_name"/>
        <result property="type" column="type"/>
        <result property="fuel_type" column="fuel_type"/>
        <result property="authority" column="authority"/>
        <result property="buy_at" column="buy_at"/>
        <result property="memo" column="memo"/>
        <result property="created_at" column="created_at"/>
    </resultMap>
    <resultMap id="carLocMap" type="com.kosa.resq.domain.vo.car.CarLocResponseVO">
        <id property="loc_code" column="loc_code"/>
        <result property="loc_code" column="loc_code"/>
        <result property="loc_type" column="loc_type"/>
        <result property="latitude" column="latitude"/>
        <result property="longitude" column="longitude"/>
        <collection property="carRezResponseDTO" resultMap="carRezMap"/>
        <collection property="memResponseVO" resultMap="memMap"/>
        <collection property="carVO" resultMap="carMap"/>
    </resultMap>
    <select id="carRezSeq" resultType="Integer">
        select car_rez_seq.nextval from dual
    </select>
    <insert id="carRezSave" parameterType="com.kosa.resq.domain.vo.car.CarRezRequestVO">
<!--        <selectKey keyProperty="car_rez_code" order="BEFORE" resultType="String">-->
<!--            select 'REZ'||car_rez_seq.nextval from dual-->
<!--        </selectKey>-->
        insert into car_rez (
                             car_rez_code,rez_at,detail,est_mileage,rez_status,
                             start_at,return_at,updated_at,mem_code,car_code
        ) values (
                  #{car_rez_code},localtimestamp,#{detail},#{est_mileage},#{rez_status},
                  #{start_at},#{return_at},localtimestamp,#{mem_code},#{car_code}
                         )
    </insert>
    <select id="carLocSeq" resultType="Integer">
        select car_loc_seq.nextval from dual
    </select>
    <insert id="carLocSave" parameterType="com.kosa.resq.domain.vo.car.CarLocRequestVO">
<!--        <selectKey keyProperty="loc_code" order="BEFORE" resultType="String">-->
<!--            select 'LOC'||car_loc_seq.nextval from dual-->
<!--        </selectKey>-->
        insert into car_loc(
                            loc_code,loc_type,latitude,longitude,address,car_rez_code,mem_code,car_code
        ) values (
                  #{loc_code},#{loc_type},#{latitude},#{longitude},#{address},
                  #{car_rez_code},#{mem_code},#{car_code}
                         )
    </insert>

    <select id="carGetAll" resultMap="carDetailMap">
        select c.car_code, c.car_name, d.car_address, c.memo from car c join car_detail d on c.car_code=d.car_code
        where authority='모두'and car_status='사용가능'
    </select>
    <select id="carGetAll2" resultType="com.kosa.resq.domain.vo.car.AvailableCarResponseVO">
    select c.car_code, c.car_name, d.car_address, c.memo, c.type, c.authority
    from car c join car_detail d on c.car_code=d.car_code
    where
        (authority='모두'or (authority='지정' and c.car_code in(select car_code from car_user where mem_code=#{mem_code})))and --지정 사용자 또는 모두 사용가능 한 차
                          ((d.car_status='사용가능' and c.CAR_CODE not in (select CAR_CODE from CAR_REZ)) --예약을 한번도 안한 사용 가능한 차량
                            or (d.car_status='사용가능' and  c.CAR_CODE in --차량이 사용 가능하고 예약중에 겹치는게 업는 차량
                                (select Distinct CAR_CODE from car_rez
                                   where #{start_at}>return_at or start_at>#{return_at})))
                            or c.car_code in (select car_code from car_rez where rez_status='2') --취소된 차량
    </select>


    <select id="carGetOne" resultMap="carDetailMap">
        select c.car_name, c.car_code, d.accum_mileage, c.authority, c.fuel_type, d.fuel_effciency, d.car_address from car c join car_detail d on c.car_code=d.car_code
        where c.car_code=#{car_code}
    </select>
    <select id="memGetOne" resultMap="memMap">
        select * from mem m join dept d on m.dept_code=d.dept_code where m.mem_code=#{mem_code}
    </select>
    <select id="carRezGetOne" resultMap="carRezMap">
        select * from car_rez r join car c on r.car_code= c.car_code join car_detail d on c.car_code=d.car_code
            join mem m on r.mem_code=m.mem_code join dept on m.dept_code=dept.dept_code
        where r.car_rez_code = #{car_rez_code}
    </select>
    <select id="carLocInfoGetAll">
        select * from car_loc where car_rez_code=#{car_rez_code}
    </select>

    <select id="carRezGetAll" resultType="com.kosa.resq.domain.vo.car.CarRezInfoResponseVO">
        select r.car_rez_code,r.rez_status, r.start_at,r.return_at,m.name,
               dept.dept_name,c.car_name,c.car_code,r.detail,c.type
        from
            car_rez r join car c on r.car_code= c.car_code join car_detail d on c.car_code=d.car_code
            join mem m on r.mem_code=m.mem_code join dept on m.dept_code=dept.dept_code
        where m.mem_code = #{mem_code}
        order by (CASE WHEN r.rez_status = '1' THEN 1 ELSE 2 END),r.rez_status,r.rez_at desc
    </select>
    <select id="filterCarRezGetAll" resultType="com.kosa.resq.domain.vo.car.CarRezInfoResponseVO">
        select r.car_rez_code,r.rez_status, r.start_at,r.return_at,m.name,
               dept.dept_name,c.car_name,c.car_code,r.detail,c.type
        from
            car_rez r join car c on r.car_code= c.car_code join car_detail d on c.car_code=d.car_code
                      join mem m on r.mem_code=m.mem_code join dept on m.dept_code=dept.dept_code
        where m.mem_code = #{mem_code}
        <if test="rez_status!= 0">
          and r.rez_status=#{rez_status}
        </if>
--         오늘 날짜 필터링 1 : 오늘, 2 : 일주일전부터 오늘까지 3 : 한달전부터 오늘까지
--         4: 설정한 기간
        <if test="dateRange!= 0">
<!--        <trim prefix="and">-->
            <choose>
                <when test="dateRange== 1">
                    and trunc(r.start_at)=trunc(localtimestamp)
                </when>
                <when test="dateRange== 2">
                    and trunc(r.start_at)>=trunc(localtimestamp)-7
                    and trunc(localtimestamp)+1>trunc(r.start_at)
                </when>
                <when test="dateRange== 3">
                    and trunc(r.start_at)>=ADD_MONTHS(TRUNC(localtimestamp,'MM'),-1)
                    and trunc(localtimestamp)+1>trunc(r.start_at)
                </when>
            </choose>
<!--        </trim>-->
        </if>
        order by r.rez_status,r.rez_at desc
    </select>
    <select id="filterCarRezGetAll2" resultType="com.kosa.resq.domain.vo.car.CarRezInfoResponseVO">
        select r.car_rez_code,r.rez_status, r.start_at,r.return_at,m.name,
        dept.dept_name,c.car_name,c.car_code,r.detail,c.type
        from
        car_rez r join car c on r.car_code= c.car_code join car_detail d on c.car_code=d.car_code
        join mem m on r.mem_code=m.mem_code join dept on m.dept_code=dept.dept_code
        where m.mem_code = #{mem_code}
        <if test="rez_status!= 0">
            and r.rez_status=#{rez_status}
        </if>
        --         오늘 날짜 필터링 1 : 오늘, 2 : 일주일전부터 오늘까지 3 : 한달전부터 오늘까지
        --         4: 설정한 기간
        <if test="dateRange!= 0">
            <!--        <trim prefix="and">-->
            <choose>
                <when test="dateRange== 1">
                    and trunc(r.start_at)=trunc(localtimestamp)
                </when>
                <when test="dateRange== 2">
                    and trunc(r.start_at)>=trunc(localtimestamp)-7
                    and trunc(localtimestamp)+1>trunc(r.start_at)
                </when>
                <when test="dateRange== 3">
                    and trunc(r.start_at)>=ADD_MONTHS(TRUNC(localtimestamp,'MM'),-1)
                    and trunc(localtimestamp)+1>trunc(r.start_at)
                </when>
            </choose>
            <!--        </trim>-->
        </if>
        and trunc(r.start_at)>=trunc(#{startDate})
        and trunc(#{endDate})+1>trunc(r.start_at)
        order by r.rez_status,r.rez_at desc
    </select>
    <select id="searchCarGetAll" resultType="com.kosa.resq.domain.vo.car.CarNameCodeResponseVO">
        select car_code,car_name from car
    </select>
    <delete id="carRezDelete">
        delete from car_rez where car_rez_code = #{car_rez_code}
    </delete>
    <update id="carRezUpdate">
        update car_rez set car_code=#{car_code},detail=#{detail},est_mileage=#{est_mileage},start_at=#{start_at},
                           return_at=#{return_at},updated_at=localtimestamp
                       where car_rez_code=#{car_rez_code}
    </update>
    <update id="carLocUpdate">
        update car_loc set address=#{address},car_code=#{car_code}
                           latitude=#{latitude},longitude=#{longitude}
                       where car_rez_code=#{car_rez_code} and loc_type=#{loc_type}
    </update>
    <delete id="carLocDelete">
        delete from car_loc where car_rez_code=#{car_rez_code}
    </delete>
<!--    운행 완료 -> 예약상태 완료 변경, 차량 상태 이용가능,누적 거리, 위치-->
    <insert id="operationSave" parameterType="com.kosa.resq.domain.vo.car.OperationRequestVO">
        <selectKey keyProperty="operation_code" order="BEFORE" resultType="String">
            select 'OPR'||operation_seq.nextval from dual
        </selectKey>
        insert into operation(
                              operation_code,car_rez_code,mem_code,car_code,memo,bef_mileage,aft_mileage,
                              distance,nomal_biz_mileage,commute_mileage,created_at,updated_at
        ) values (
              #{operation_code},#{car_rez_code},#{mem_code},#{car_code},#{memo},#{bef_mileage},#{aft_mileage},
              #{distance},#{nomal_biz_mileage},#{commute_mileage},localtimestamp,localtimestamp
              )
    </insert>
    <update id="carRezCompleteUpdate">
       update /*+ NO_PARALLEL(car_rez) */ car_rez set  rez_status='5',updated_at=localtimestamp where car_rez_code=#{car_rez_code}
    </update>
    <update id="carDetailUpdate">
        update /*+ NO_PARALLEL(car_detail) */ car_detail set car_status='사용가능',accum_mileage=#{accum_mileage},
                             car_latitude=#{car_latitude},car_longitude=#{car_longitude},car_address=#{car_address}
        where car_code=#{car_code}
    </update>
    <select id="carLocReturnGetOne">
        select * from car_loc where car_rez_code=#{car_rez_code} and loc_type='반납지'
    </select>
    <insert id="expenditureSave">
        <selectKey keyProperty="exp_code" order="BEFORE" resultType="String">
            select 'EXP'||expenditure_seq.nextval from dual
        </selectKey>
            insert into expenditure (
                                     exp_code,exp_at,exp_content,cost,status,
                                     created_at,updated_at,url,account,ac_detail,pay_method,mem_code
            ) values (
                    #{exp_code},#{exp_at},#{exp_content},#{cost},#{status},localtimestamp,localtimestamp,#{url},
                    #{account},#{ac_detail},#{pay_method},#{mem_code}
            )
    </insert>

    <update id="selectedCarUpdate">
        update car_detail set car_status='선택됨' where car_code=#{car_code}
    </update>
    <update id="expImgUpdate">
        update expenditure set url=#{url} where exp_code=#{exp_code}
    </update>
    <insert id="alarmSave">
-- 0이면 안읽은거 1이면 읽은거
        <selectKey keyProperty="alert_code" order="BEFORE" resultType="String">
            select 'ALE'||alert_seq.nextval from dual
        </selectKey>
        insert into alert (alert_code,mem_code,alert_at,is_read,contents)
        values (#{alert_code},#{mem_code},localtimestamp,#{is_read},#{contents})
    </insert>
    <select id="memAlarmGetAll">
        select * from alert where  mem_code is null or mem_code in
                            <foreach collection="mem_codes" item="mem_code" open="(" separator="," close=")">
                                #{mem_code}
                            </foreach>
        order by ALERT_AT DESC
    </select>
    <update id="alarmUpdate">
        update alert set is_read=1 where alert_code=#{alert_code}
    </update>
    <insert id="announcementSave">
        -- 0이면 안읽은거 1이면 읽은거
        <selectKey keyProperty="alert_code" order="BEFORE" resultType="String">
            select 'ALE'||alert_seq.nextval from dual
        </selectKey>
        insert into alert (alert_code,mem_code,alert_at,is_read,contents)
        values (#{alert_code},null,localtimestamp,#{is_read},#{contents})
    </insert>
    <select id="announcementGetAll">
--         select * from alert where CONTENTS LIKE '%전체%'
        select * from alert
        order by ALERT_AT DESC
    </select>
</mapper>
